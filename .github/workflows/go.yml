name: GO

on:
  push:
    branches: ["main"]

jobs:
  # Задание производит сборку приложения

  build:
    runs-on: ubuntu-latest
    # Шаги задания
    steps:
      # Первый шаг использует действие "actions/checkout@v3", которое извлекает репозиторий для дальнейшей работы с ним
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4

      # Шаг с именем "Build"
      - name: Build
        # Этот шаг просто выполняет команду 'go build -v ./...'
        run: go build -v ./...

  # Задание запускает тесты
  tests:
    # Задание "tests" зависит от задания "build" и будет выполнено после него
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
      # Шаг с именем "Test"
      - name: Test
        # Этот шаг выполняет команду 'go test -v ./...'
        run: go test -v ./...

  # Задание проверяет наличие в коде состояния гонки
  tests-race:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4

      - name: Test
        run: go test -race -v ./...

  # Задание проверяет код на соответствие стилю и отсутствие логических ошибок
  lint:
    # Задание "lint" зависит от заданий "tests" и "tests-race" и будет выполнено после них
    needs: [tests, tests-race]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
      # Используется действие "golangci/golangci-lint-action@v3", которое запускает линтер. Он проверит код на соответствие стилю и отсутствие логических ошибок
      - uses: golangci/golangci-lint-action@v3
